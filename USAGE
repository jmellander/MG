=== USAGE ===

Sumstats provides summary statistics (generally of network events) on a periodic basis.  MG allows for observations with a key and amount to be summed in a probabilistic manner that provides a reasonable estimate of heavy hitters of the observations.

Non-probabilistic SumStats obserations are made with a Key (either a host IP address, or a string) and an Observation (either a numeric value, or a string).  Each distinct Key creates a table on every worker that takes an Observation on that Key.

Probabilistic SumStats policies (HLL - HyperLogLog, TopK, and this one, MG) necessarily use an internal data structure to store their data, and a Key is not used, as this would obviate the memory advantages of using these policies.  HLL & TopK both take unit observations, and push their input to SumStats via the string Observation$str. MG uses Observation$str in place of the key & Observation$num to store the value.  Below are some examples for clarity:

Non-probabilistic SumStats:
SumStats::observe( "MySumStats", [$host=my_host], [$num=bytes] );

HLL or TopK probabilistic:
SumStats::observe( "MySumStats", [], [$str=fmt("%s",my_host)] );

MG probabilistic SumStats:
SumStats::observe( "MySumStats", [], [$str=fmt("%s",my_host), $num=bytes] );


The key difference between MG & the other probabilistic policies is that it allows an amount (typically a byte-count) to be observed along with a string (referred to as the key - although as noted previously, it doesn't use the Key field) that the amount refers to.  MG maintains a data structure that captures the sum of observation amounts by the key, and provides that data structure as the single result.  In line with other probabilistic policies, a function that efficiently provides a TopK of that data structure is provided, so that the Heavy Hitters can be identified.

There are several tunables that can be set when using MG is initialized:

mg_tbl_sz: Size of the Misra-Gries table, default 8192
MG_L: Number of entries to use for median calculation in algorithm, default 4*log2(mg_tbl_sz)

There are several demonstation policies included:

heavy_hitters.bro - uses regular SumStats SUM mechanism to track and report heavy hitters by IP.  In a production environment, this will likely cause an memory explosion.
mg-heavy_hitters.bro - uses MG mechanism for same purpose, with much less memory usage.

These policies use an undocumented feature of Sumstats to modify the sampling epoch to match the logging interval, so that it matches the default logging of other policies.

=== INSTALLATION ===

Either put in local.bro by

@load ./mg

or can be added to the Sumstats framework by:

edit share/bro/base/frameworks/sumstats/plugins/__load__.bro
and add the line

@load ./mg

then put mg.bro into the directory share/bro/base/frameworks/sumstats/plugins


